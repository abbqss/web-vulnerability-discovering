import sys
import time

from dynamicAnalysis import DynamicAnalysis

from ExploitSeed import ExploitSeed

"""
  Author: Abeer Alhuzali
  This program runs the traversal that constructs the concrete exploits.
  For more information, please read "NAVEX: Precise and Scalable Exploit Generation for Dynamic Web Applications"
  
"""


def main(argv):
    attackType = argv[1].strip()

    dm = DynamicAnalysis(7474)
    lines = dm.readExploitSeedsFile(attackType)
    i = 0
    start = time.time()
    while i in range(len(lines)):
        ex = ExploitSeed()
        strr = lines[i] + "\n" + lines[i + 1] + "\n" + lines[i + 2] + "\n" + lines[i + 3] + "\n" + lines[i + 4]
        print (strr)
        ex.stripDataFromOutput(strr)

        query = dm.prepareFinalQuery(ex)

        result, elapsed_time = dm.runTimedQuery(query)

        writeToFile(strr, query, result, elapsed_time, attackType)

        i = i + 5

    elapsed = time.time() - start

    x = "TOTAL TIME IS >>>>>>>>> %s" % elapsed
    print(x)
    writeToFile("", "", "", x, attackType)

    # print(query)


def writeToFile(origQuery, query, result, elapsed_time, attackType):
    if attackType == "sql":
        f = open('/home/abeer/workspace/crawler/results/navigation_sequences.txt', 'a')
    elif attackType == "xss":
        f = open('/home/abeer/workspace/crawler/results/navigation_sequences_xss.txt', 'a')
    elif attackType == "code":
        f = open('/home/abeer/workspace/crawler/results/navigation_sequences_code.txt', 'a')
    elif attackType == "os-command":
        f = open('/home/abeer/workspace/crawler/results/navigation_sequences_os-command.txt', 'a')
    elif attackType == "file-inc":
        f = open('/home/abeer/workspace/crawler/results/navigation_sequences_file-inc.txt', 'a')
    elif attackType == "ear":
        f = open('/home/abeer/workspace/crawler/results/navigation_sequences_ear.txt', 'a')

    print>> f, origQuery
    print>> f, query
    for node in result:
        print (node)
        print>> f, node
    print>> f, elapsed_time
    f.close()


if __name__ == '__main__':
    main(sys.argv)
