package com.example.demo.controller;

import net.sf.json.JSONObject;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import java.io.*;
import java.util.Random;



@RestController
public class FileController {
    /**
     * 接受未知参数名的多个文件或者一个文件
     *
     * @param request 请求
     * @return 返回
     */
    @CrossOrigin
    @PostMapping("/upload")
    public String handleFileUpload(HttpServletRequest request) {
        String code = request.getParameter("code");
        try {
            String path = "/home/test/Desktop/upload/received/";
            File mkdirsName = new File(path);// 相对路径，如果没有则要建立一个新的output。txt文件
            if(!mkdirsName.exists()){
                mkdirsName.mkdirs();
            }
            File writename = new File(path+"default.php");
            if(!writename.exists()) {
                writename.createNewFile(); // 创建新文件
            }
            BufferedWriter out = new BufferedWriter(new FileWriter(writename,false));
            out.write(code);
            out.flush();
            out.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        JSONObject result = new JSONObject();
        result.put("file-zh-input","上传成功");
        return result.toString();

    }

    /**
     * 知道参数名的文件上传
     *
     * @param multipartFile 文件
     * @return 返回
     * @throws IOException
     */
    @CrossOrigin
    @PostMapping("/uploadCommon")
    //public JSONObject upload(MultipartFile multipartFile) throws IOException {
    public JSONObject upload(@RequestParam("file-zh[]") MultipartFile multipartFile) throws IOException {
        String name = multipartFile.getName();//上传文件的参数名
        String originalFilename = multipartFile.getOriginalFilename();//上传文件的文件路径名
        long size = multipartFile.getSize();//文件大小
        String folder = "/home/test/Desktop/upload/received/";
        String picName = originalFilename;
        File filelocal = new File(folder, picName);
        multipartFile.transferTo(filelocal);
        JSONObject jsonObject = new JSONObject();
        jsonObject.put("error_code", 223805);
        jsonObject.put("reason", "文件过大或上传发生错误");
        Random random = new Random();
        if (random.nextInt(10) > 3) {
            jsonObject.put("error_code", 0);
            jsonObject.put("reason", "success");
            JSONObject result = new JSONObject();
            result.put(name, folder + picName);
            jsonObject.put("result", result);
        }
        return jsonObject;
    }

    @CrossOrigin
    @PostMapping("/check")
    public String hello(HttpServletRequest request){
        String code = request.getParameter("code");
        System.out.println(code);
        String text="";
        String s = null;
        StringBuffer sb = new StringBuffer();
        JSONObject result = new JSONObject();
        ProcessBuilder builder1 = new ProcessBuilder("/home/test/Desktop/build.sh");
        ProcessBuilder builder2 = new ProcessBuilder("/home/test/Desktop/start_neo4j.sh");
        ProcessBuilder builder3 = new ProcessBuilder("/home/test/Desktop/start_pyjoern.sh");
        try{
            Process p1=builder1.start();
            Process p2=builder2.start();
            Process p3=builder3.start();
            BufferedReader stdInput = new BufferedReader(new InputStreamReader(p3.getInputStream()));
            while ((s = stdInput.readLine()) != null) {
                sb.append(s+'\n');
            }
            text = sb.toString();
            }catch (Exception e){

        }
        System.out.println("success");
        result.put("status","success");
        result.put("test_textcontent",text);
        System.out.println(text);
        return result.toString();
    }


}
